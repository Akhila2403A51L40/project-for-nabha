{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\OneDrive\\\\Desktop\\\\minor project\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n};\n_s(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // { id, name, role: 'admin'|'student' }\n\n  useEffect(() => {\n    try {\n      const raw = localStorage.getItem('auth:user');\n      if (raw) setUser(JSON.parse(raw));\n    } catch {}\n  }, []);\n  useEffect(() => {\n    try {\n      if (user) localStorage.setItem('auth:user', JSON.stringify(user));else localStorage.removeItem('auth:user');\n    } catch {}\n  }, [user]);\n  const login = async ({\n    username,\n    password,\n    role\n  }) => {\n    // Mock auth: admin/admin => admin, student/student => student\n    const isAdmin = username === 'admin' && password === 'admin' && role === 'admin';\n    const isStudent = username === 'student' && password === 'student' && role === 'student';\n    if (!isAdmin && !isStudent) throw new Error('Invalid credentials');\n    const authedUser = isAdmin ? {\n      id: '1',\n      name: 'Admin',\n      role: 'admin'\n    } : {\n      id: '2',\n      name: 'Student',\n      role: 'student'\n    };\n    setUser(authedUser);\n    return authedUser;\n  };\n  const logout = () => setUser(null);\n  const value = useMemo(() => ({\n    user,\n    isAuthenticated: !!user,\n    login,\n    logout\n  }), [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"48VJv48jlVmfTJkW0//FliWj/5Q=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","ctx","Error","AuthProvider","children","_s2","user","setUser","raw","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","login","username","password","role","isAdmin","isStudent","authedUser","id","name","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kumar/OneDrive/Desktop/minor project/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // { id, name, role: 'admin'|'student' }\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const raw = localStorage.getItem('auth:user');\r\n      if (raw) setUser(JSON.parse(raw));\r\n    } catch {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (user) localStorage.setItem('auth:user', JSON.stringify(user));\r\n      else localStorage.removeItem('auth:user');\r\n    } catch {}\r\n  }, [user]);\r\n\r\n  const login = async ({ username, password, role }) => {\r\n    // Mock auth: admin/admin => admin, student/student => student\r\n    const isAdmin = username === 'admin' && password === 'admin' && role === 'admin';\r\n    const isStudent = username === 'student' && password === 'student' && role === 'student';\r\n    if (!isAdmin && !isStudent) throw new Error('Invalid credentials');\r\n\r\n    const authedUser = isAdmin\r\n      ? { id: '1', name: 'Admin', role: 'admin' }\r\n      : { id: '2', name: 'Student', role: 'student' };\r\n    setUser(authedUser);\r\n    return authedUser;\r\n  };\r\n\r\n  const logout = () => setUser(null);\r\n\r\n  const value = useMemo(() => ({ user, isAuthenticated: !!user, login, logout }), [user]);\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,GAAG,GAAGT,UAAU,CAACM,WAAW,CAAC;EACnC,IAAI,CAACG,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ,CAAC;AAACD,EAAA,CAJWD,OAAO;AAMpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExCF,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMe,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC7C,IAAIF,GAAG,EAAED,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC,MAAM,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,IAAI;MACF,IAAIa,IAAI,EAAEG,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC,CAAC,KAC7DG,YAAY,CAACM,UAAU,CAAC,WAAW,CAAC;IAC3C,CAAC,CAAC,MAAM,CAAC;EACX,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMU,KAAK,GAAG,MAAAA,CAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAK,CAAC,KAAK;IACpD;IACA,MAAMC,OAAO,GAAGH,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,IAAIC,IAAI,KAAK,OAAO;IAChF,MAAME,SAAS,GAAGJ,QAAQ,KAAK,SAAS,IAAIC,QAAQ,KAAK,SAAS,IAAIC,IAAI,KAAK,SAAS;IACxF,IAAI,CAACC,OAAO,IAAI,CAACC,SAAS,EAAE,MAAM,IAAInB,KAAK,CAAC,qBAAqB,CAAC;IAElE,MAAMoB,UAAU,GAAGF,OAAO,GACtB;MAAEG,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,OAAO;MAAEL,IAAI,EAAE;IAAQ,CAAC,GACzC;MAAEI,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEL,IAAI,EAAE;IAAU,CAAC;IACjDZ,OAAO,CAACe,UAAU,CAAC;IACnB,OAAOA,UAAU;EACnB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAMlB,OAAO,CAAC,IAAI,CAAC;EAElC,MAAMmB,KAAK,GAAGhC,OAAO,CAAC,OAAO;IAAEY,IAAI;IAAEqB,eAAe,EAAE,CAAC,CAACrB,IAAI;IAAEU,KAAK;IAAES;EAAO,CAAC,CAAC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEvF,oBAAOT,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAAEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC3B,GAAA,CAnCWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}