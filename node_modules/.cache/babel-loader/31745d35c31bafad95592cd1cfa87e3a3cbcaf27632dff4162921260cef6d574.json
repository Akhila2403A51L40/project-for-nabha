{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kumar\\\\OneDrive\\\\Desktop\\\\minor project\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n};\n_s(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // { id, username, name, role }\n  const [users, setUsers] = useState([]); // persisted registered users\n\n  useEffect(() => {\n    try {\n      const raw = localStorage.getItem('auth:user');\n      if (raw) setUser(JSON.parse(raw));\n      const rawUsers = localStorage.getItem('auth:users');\n      if (rawUsers) setUsers(JSON.parse(rawUsers));\n    } catch {}\n  }, []);\n  useEffect(() => {\n    try {\n      if (user) localStorage.setItem('auth:user', JSON.stringify(user));else localStorage.removeItem('auth:user');\n    } catch {}\n  }, [user]);\n  useEffect(() => {\n    try {\n      localStorage.setItem('auth:users', JSON.stringify(users));\n    } catch {}\n  }, [users]);\n  const register = async ({\n    username,\n    password,\n    role,\n    name\n  }) => {\n    const exists = users.some(u => u.username === username);\n    if (exists) throw new Error('Username already exists');\n    const newUser = {\n      id: String(Date.now()),\n      username,\n      password,\n      role,\n      name: name || username\n    };\n    setUsers(prev => [...prev, newUser]);\n    return newUser;\n  };\n  const login = async ({\n    username,\n    password,\n    role\n  }) => {\n    const found = users.find(u => u.username === username && u.password === password && (!role || u.role === role));\n    if (!found) throw new Error('Invalid credentials');\n    setUser({\n      id: found.id,\n      username: found.username,\n      name: found.name,\n      role: found.role\n    });\n    return found;\n  };\n  const logout = () => setUser(null);\n  const value = useMemo(() => ({\n    user,\n    isAuthenticated: !!user,\n    register,\n    login,\n    logout\n  }), [user, users]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"7SnLlmjzxV/9Y05aS4wjJw2knBQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","ctx","Error","AuthProvider","children","_s2","user","setUser","users","setUsers","raw","localStorage","getItem","JSON","parse","rawUsers","setItem","stringify","removeItem","register","username","password","role","name","exists","some","u","newUser","id","String","Date","now","prev","login","found","find","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kumar/OneDrive/Desktop/minor project/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null); // { id, username, name, role }\r\n  const [users, setUsers] = useState([]); // persisted registered users\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const raw = localStorage.getItem('auth:user');\r\n      if (raw) setUser(JSON.parse(raw));\r\n      const rawUsers = localStorage.getItem('auth:users');\r\n      if (rawUsers) setUsers(JSON.parse(rawUsers));\r\n    } catch {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (user) localStorage.setItem('auth:user', JSON.stringify(user));\r\n      else localStorage.removeItem('auth:user');\r\n    } catch {}\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('auth:users', JSON.stringify(users));\r\n    } catch {}\r\n  }, [users]);\r\n\r\n  const register = async ({ username, password, role, name }) => {\r\n    const exists = users.some(u => u.username === username);\r\n    if (exists) throw new Error('Username already exists');\r\n    const newUser = { id: String(Date.now()), username, password, role, name: name || username };\r\n    setUsers(prev => [...prev, newUser]);\r\n    return newUser;\r\n  };\r\n\r\n  const login = async ({ username, password, role }) => {\r\n    const found = users.find(u => u.username === username && u.password === password && (!role || u.role === role));\r\n    if (!found) throw new Error('Invalid credentials');\r\n    setUser({ id: found.id, username: found.username, name: found.name, role: found.role });\r\n    return found;\r\n  };\r\n\r\n  const logout = () => setUser(null);\r\n\r\n  const value = useMemo(() => ({ user, isAuthenticated: !!user, register, login, logout }), [user, users]);\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}